// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.19.4
// source: server_info.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	game "ohdada/g2gserver/internal/pkg/pb/game"
	_ "ohdada/g2gserver/internal/pkg/pb/gen_bq_schema"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ServerType int32

const (
	ServerType_ST_NONE    ServerType = 0
	ServerType_ST_GATEWAY ServerType = 1
	ServerType_ST_GAME    ServerType = 2
	ServerType_ST_FLUENTD ServerType = 3
)

// Enum value maps for ServerType.
var (
	ServerType_name = map[int32]string{
		0: "ST_NONE",
		1: "ST_GATEWAY",
		2: "ST_GAME",
		3: "ST_FLUENTD",
	}
	ServerType_value = map[string]int32{
		"ST_NONE":    0,
		"ST_GATEWAY": 1,
		"ST_GAME":    2,
		"ST_FLUENTD": 3,
	}
)

func (x ServerType) Enum() *ServerType {
	p := new(ServerType)
	*p = x
	return p
}

func (x ServerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ServerType) Descriptor() protoreflect.EnumDescriptor {
	return file_server_info_proto_enumTypes[0].Descriptor()
}

func (ServerType) Type() protoreflect.EnumType {
	return &file_server_info_proto_enumTypes[0]
}

func (x ServerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ServerType.Descriptor instead.
func (ServerType) EnumDescriptor() ([]byte, []int) {
	return file_server_info_proto_rawDescGZIP(), []int{0}
}

type ServerInfo struct {
	state              protoimpl.MessageState
	WebsocketProtocol  string `protobuf:"bytes,14,opt,name=websocket_protocol,json=websocketProtocol,proto3" json:"websocket_protocol,omitempty"`
	PublicIpAddress    string `protobuf:"bytes,13,opt,name=public_ip_address,json=publicIpAddress,proto3" json:"public_ip_address,omitempty"`
	Id                 string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Group              string `protobuf:"bytes,8,opt,name=group,proto3" json:"group,omitempty"`
	Host               string `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Protocol           string `protobuf:"bytes,5,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Name               string `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	WebsocketRoutePath string `protobuf:"bytes,15,opt,name=websocket_route_path,json=websocketRoutePath,proto3" json:"websocket_route_path,omitempty"`
	unknownFields      protoimpl.UnknownFields
	ConcurrentGame     int64         `protobuf:"varint,12,opt,name=concurrent_game,json=concurrentGame,proto3" json:"concurrent_game,omitempty"`
	LastRequestTime    int64         `protobuf:"varint,10,opt,name=last_request_time,json=lastRequestTime,proto3" json:"last_request_time,omitempty"`
	ConcurrentPlayer   int64         `protobuf:"varint,11,opt,name=concurrent_player,json=concurrentPlayer,proto3" json:"concurrent_player,omitempty"`
	Type               ServerType    `protobuf:"varint,2,opt,name=type,proto3,enum=pb.ServerType" json:"type,omitempty"`
	GameType           game.GameType `protobuf:"varint,6,opt,name=game_type,json=gameType,proto3,enum=pb.game.GameType" json:"game_type,omitempty"`
	Port               int32         `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	sizeCache          protoimpl.SizeCache
	IsOffline          bool `protobuf:"varint,9,opt,name=is_offline,json=isOffline,proto3" json:"is_offline,omitempty"`
}

func (x *ServerInfo) Reset() {
	*x = ServerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_info_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfo) ProtoMessage() {}

func (x *ServerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_server_info_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfo.ProtoReflect.Descriptor instead.
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return file_server_info_proto_rawDescGZIP(), []int{0}
}

func (x *ServerInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ServerInfo) GetType() ServerType {
	if x != nil {
		return x.Type
	}
	return ServerType_ST_NONE
}

func (x *ServerInfo) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *ServerInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ServerInfo) GetProtocol() string {
	if x != nil {
		return x.Protocol
	}
	return ""
}

func (x *ServerInfo) GetGameType() game.GameType {
	if x != nil {
		return x.GameType
	}
	return game.GameType(0)
}

func (x *ServerInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServerInfo) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *ServerInfo) GetIsOffline() bool {
	if x != nil {
		return x.IsOffline
	}
	return false
}

func (x *ServerInfo) GetLastRequestTime() int64 {
	if x != nil {
		return x.LastRequestTime
	}
	return 0
}

func (x *ServerInfo) GetConcurrentPlayer() int64 {
	if x != nil {
		return x.ConcurrentPlayer
	}
	return 0
}

func (x *ServerInfo) GetConcurrentGame() int64 {
	if x != nil {
		return x.ConcurrentGame
	}
	return 0
}

func (x *ServerInfo) GetPublicIpAddress() string {
	if x != nil {
		return x.PublicIpAddress
	}
	return ""
}

func (x *ServerInfo) GetWebsocketProtocol() string {
	if x != nil {
		return x.WebsocketProtocol
	}
	return ""
}

func (x *ServerInfo) GetWebsocketRoutePath() string {
	if x != nil {
		return x.WebsocketRoutePath
	}
	return ""
}

type ServerInfoList struct {
	state         protoimpl.MessageState
	unknownFields protoimpl.UnknownFields
	Data          []*ServerInfo `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty"`
	sizeCache     protoimpl.SizeCache
}

func (x *ServerInfoList) Reset() {
	*x = ServerInfoList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_info_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerInfoList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfoList) ProtoMessage() {}

func (x *ServerInfoList) ProtoReflect() protoreflect.Message {
	mi := &file_server_info_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfoList.ProtoReflect.Descriptor instead.
func (*ServerInfoList) Descriptor() ([]byte, []int) {
	return file_server_info_proto_rawDescGZIP(), []int{1}
}

func (x *ServerInfoList) GetData() []*ServerInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type ServerInfoMapByName struct {
	state         protoimpl.MessageState
	Data          map[string]*ServerInfo `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerInfoMapByName) Reset() {
	*x = ServerInfoMapByName{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_info_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerInfoMapByName) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfoMapByName) ProtoMessage() {}

func (x *ServerInfoMapByName) ProtoReflect() protoreflect.Message {
	mi := &file_server_info_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfoMapByName.ProtoReflect.Descriptor instead.
func (*ServerInfoMapByName) Descriptor() ([]byte, []int) {
	return file_server_info_proto_rawDescGZIP(), []int{2}
}

func (x *ServerInfoMapByName) GetData() map[string]*ServerInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type ServerInfoMapByType struct {
	state         protoimpl.MessageState
	Data          map[int64]*ServerInfoMapByName `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerInfoMapByType) Reset() {
	*x = ServerInfoMapByType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_info_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerInfoMapByType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfoMapByType) ProtoMessage() {}

func (x *ServerInfoMapByType) ProtoReflect() protoreflect.Message {
	mi := &file_server_info_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfoMapByType.ProtoReflect.Descriptor instead.
func (*ServerInfoMapByType) Descriptor() ([]byte, []int) {
	return file_server_info_proto_rawDescGZIP(), []int{3}
}

func (x *ServerInfoMapByType) GetData() map[int64]*ServerInfoMapByName {
	if x != nil {
		return x.Data
	}
	return nil
}

type ServerInfoListMapByType struct {
	state         protoimpl.MessageState
	Data          map[int64]*ServerInfoList `protobuf:"bytes,1,rep,name=Data,proto3" json:"Data,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerInfoListMapByType) Reset() {
	*x = ServerInfoListMapByType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_server_info_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerInfoListMapByType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerInfoListMapByType) ProtoMessage() {}

func (x *ServerInfoListMapByType) ProtoReflect() protoreflect.Message {
	mi := &file_server_info_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerInfoListMapByType.ProtoReflect.Descriptor instead.
func (*ServerInfoListMapByType) Descriptor() ([]byte, []int) {
	return file_server_info_proto_rawDescGZIP(), []int{4}
}

func (x *ServerInfoListMapByType) GetData() map[int64]*ServerInfoList {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_server_info_proto protoreflect.FileDescriptor

var file_server_info_proto_rawDesc = []byte{
	0x0a, 0x11, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x1a, 0x1c, 0x67, 0x65, 0x6e, 0x5f, 0x62, 0x71, 0x5f,
	0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x2f, 0x62, 0x71, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x67, 0x61, 0x6d, 0x65, 0x2f, 0x67, 0x61, 0x6d, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe7, 0x04, 0x0a, 0x0a,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0xea, 0x3f, 0x02, 0x18, 0x01, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x42,
	0x05, 0xea, 0x3f, 0x02, 0x18, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x04,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0xea, 0x3f, 0x02, 0x18,
	0x01, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x42, 0x05, 0xea, 0x3f, 0x02, 0x18, 0x01, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x21, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0xea, 0x3f, 0x02, 0x18, 0x01, 0x52, 0x08, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x35, 0x0a, 0x09, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x2e, 0x47, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x42, 0x05, 0xea, 0x3f, 0x02,
	0x18, 0x01, 0x52, 0x08, 0x67, 0x61, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x24, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x6f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x42, 0x05, 0xea, 0x3f, 0x02, 0x18,
	0x01, 0x52, 0x09, 0x69, 0x73, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x31, 0x0a, 0x11,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x42, 0x05, 0xea, 0x3f, 0x02, 0x18, 0x01, 0x52, 0x0f,
	0x6c, 0x61, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x32, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x42, 0x05, 0xea, 0x3f, 0x02, 0x18,
	0x01, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x42, 0x05, 0xea, 0x3f,
	0x02, 0x18, 0x01, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x47,
	0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x11, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x69, 0x70,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05,
	0xea, 0x3f, 0x02, 0x18, 0x01, 0x52, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x49, 0x70, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x34, 0x0a, 0x12, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63,
	0x6b, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x05, 0xea, 0x3f, 0x02, 0x18, 0x01, 0x52, 0x11, 0x77, 0x65, 0x62, 0x73, 0x6f,
	0x63, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x37, 0x0a, 0x14,
	0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x42, 0x05, 0xea, 0x3f, 0x02, 0x18,
	0x01, 0x52, 0x12, 0x77, 0x65, 0x62, 0x73, 0x6f, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x50, 0x61, 0x74, 0x68, 0x22, 0x34, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x95, 0x01, 0x0a, 0x13,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x42, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x4d, 0x61, 0x70, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x47, 0x0a, 0x09, 0x44, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x9e, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x4d, 0x61, 0x70, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x61, 0x70, 0x42, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x1a, 0x50, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x4d, 0x61, 0x70, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xa1, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x39, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25,
	0x2e, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69,
	0x73, 0x74, 0x4d, 0x61, 0x70, 0x42, 0x79, 0x54, 0x79, 0x70, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x4b, 0x0a, 0x09, 0x44,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x28, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x46, 0x0a, 0x0a, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x5f, 0x4e, 0x4f, 0x4e,
	0x45, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x5f, 0x47, 0x41, 0x54, 0x45, 0x57, 0x41,
	0x59, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x5f, 0x47, 0x41, 0x4d, 0x45, 0x10, 0x02,
	0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x54, 0x5f, 0x46, 0x4c, 0x55, 0x45, 0x4e, 0x54, 0x44, 0x10, 0x03,
	0x42, 0x22, 0x5a, 0x20, 0x6f, 0x68, 0x64, 0x61, 0x64, 0x61, 0x2f, 0x67, 0x32, 0x67, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x2f, 0x70, 0x6b,
	0x67, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_server_info_proto_rawDescOnce sync.Once
	file_server_info_proto_rawDescData = file_server_info_proto_rawDesc
)

func file_server_info_proto_rawDescGZIP() []byte {
	file_server_info_proto_rawDescOnce.Do(func() {
		file_server_info_proto_rawDescData = protoimpl.X.CompressGZIP(file_server_info_proto_rawDescData)
	})
	return file_server_info_proto_rawDescData
}

var file_server_info_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_server_info_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_server_info_proto_goTypes = []interface{}{
	(ServerType)(0),                 // 0: pb.ServerType
	(*ServerInfo)(nil),              // 1: pb.ServerInfo
	(*ServerInfoList)(nil),          // 2: pb.ServerInfoList
	(*ServerInfoMapByName)(nil),     // 3: pb.ServerInfoMapByName
	(*ServerInfoMapByType)(nil),     // 4: pb.ServerInfoMapByType
	(*ServerInfoListMapByType)(nil), // 5: pb.ServerInfoListMapByType
	nil,                             // 6: pb.ServerInfoMapByName.DataEntry
	nil,                             // 7: pb.ServerInfoMapByType.DataEntry
	nil,                             // 8: pb.ServerInfoListMapByType.DataEntry
	(game.GameType)(0),              // 9: pb.game.GameType
}
var file_server_info_proto_depIdxs = []int32{
	0, // 0: pb.ServerInfo.type:type_name -> pb.ServerType
	9, // 1: pb.ServerInfo.game_type:type_name -> pb.game.GameType
	1, // 2: pb.ServerInfoList.Data:type_name -> pb.ServerInfo
	6, // 3: pb.ServerInfoMapByName.Data:type_name -> pb.ServerInfoMapByName.DataEntry
	7, // 4: pb.ServerInfoMapByType.Data:type_name -> pb.ServerInfoMapByType.DataEntry
	8, // 5: pb.ServerInfoListMapByType.Data:type_name -> pb.ServerInfoListMapByType.DataEntry
	1, // 6: pb.ServerInfoMapByName.DataEntry.value:type_name -> pb.ServerInfo
	3, // 7: pb.ServerInfoMapByType.DataEntry.value:type_name -> pb.ServerInfoMapByName
	2, // 8: pb.ServerInfoListMapByType.DataEntry.value:type_name -> pb.ServerInfoList
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_server_info_proto_init() }
func file_server_info_proto_init() {
	if File_server_info_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_server_info_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_info_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerInfoList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_info_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerInfoMapByName); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_info_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerInfoMapByType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_server_info_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerInfoListMapByType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_server_info_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_server_info_proto_goTypes,
		DependencyIndexes: file_server_info_proto_depIdxs,
		EnumInfos:         file_server_info_proto_enumTypes,
		MessageInfos:      file_server_info_proto_msgTypes,
	}.Build()
	File_server_info_proto = out.File
	file_server_info_proto_rawDesc = nil
	file_server_info_proto_goTypes = nil
	file_server_info_proto_depIdxs = nil
}
